# -*- coding: utf-8 -*-
"""Programming _For_DataAnalysis_Assessment.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18RGuXyyrrMRf7B8bR_KRez9eRP3ghBqJ

### **Mounting the google drive to the colab environment:**
"""

from google.colab import drive
drive.mount('/content/drive')

# Commented out IPython magic to ensure Python compatibility.
# %cd '/content/drive/MyDrive/Assessment_Final_Data'

"""# TASK 1: DATA HANDLING

## LOADING THE DATASET
"""

# Commented out IPython magic to ensure Python compatibility.
# %ls

import pandas as pd
import glob

# Get all CSV files in the folder
csv_files = glob.glob("/content/drive/MyDrive/Assessment_Final_Data/*.csv")
csv_files

"""## COMBINING ALL THE DATASETS TO ONE DATAFRAME"""

# Read and combine all CSV files
combined_df = pd.concat([pd.read_csv(file) for file in csv_files], ignore_index=True)
combined_df

df1 = combined_df.drop_duplicates()
df1

# Save to a new CSV file
df1.to_csv("combined_output.csv", index=False)

print("All CSV files have been merged into 'combined_output.csv'.")

"""# TASK2 : EDA(EXPLORATORY DATA ANALYSIS)

## A) FUNDAMENTAL DATA UNDERSTANDING
"""

df1.shape

df1.columns

df1.info()

selected_columns = ['No', 'year', 'month', 'day', 'hour', 'PM2.5', 'PM10', 'SO2', 'NO2','CO', 'O3', 'TEMP', 'PRES', 'DEWP', 'RAIN', 'wd', 'WSPM', 'station']
df = df1[selected_columns]
df

# Missing values
def missing_values_table(df):
        # Total missing values
        mis_val = df.isnull().sum()

        # Percentage of missing values
        mis_val_percent = 100 * df.isnull().sum() / len(df)

        # Make a table with the results
        mis_val_table = pd.concat([mis_val, mis_val_percent], axis=1)
        print(mis_val_table)

        # Rename the columns
        mis_val_table_ren_columns = mis_val_table.rename(
        columns = {0 : 'Missing Values', 1 : '% of Total Values'})

        # Sort the table by percentage of missing descending
        mis_val_table_ren_columns = mis_val_table_ren_columns.sort_values(
        '% of Total Values', ascending=False)

        # Return the dataframe with missing information
        return mis_val_table_ren_columns

missing_values= missing_values_table(df)
missing_values.style.background_gradient(cmap='RdYlGn_r')

df.describe()

df['solid_pollutants'] = df['PM2.5'] + df['PM10']



df['gas_pollutants'] = df['SO2'] + df['NO2'] + df['CO'] + df['O3']

print(df[['PM2.5', 'PM10', 'SO2', 'NO2', 'CO', 'O3', 'solid_pollutants', 'gas_pollutants']].head())























